version: "3.9"
services:
  db:
    image: postgis/postgis:16-3.4
    container_name: lf_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports: ["5432:5432"]
    volumes:
      - lf_db_data:/var/lib/postgresql/data
      - ./init/postgres-init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 20

  minio:
    image: minio/minio:RELEASE.2024-07-04T14-25-45Z
    container_name: lf_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports: ["9000:9000", "9001:9001"]
    volumes:
      - lf_minio_data:/data

  redis:
    image: redis:7-alpine
    container_name: lf_redis
    ports: ["6379:6379"]

  nlp:
    build: ../../services/nlp
    container_name: lf_nlp
    env_file: ../../.env
    ports: ["8010:8010"]
    deploy:
      resources:
        reservations:
          devices: []   # add GPU if needed

  vision:
    build: ../../services/vision
    container_name: lf_vision
    env_file: ../../.env
    ports: ["8020:8020"]

  api:
    build: ../../services/api
    container_name: lf_api
    depends_on:
      db: { condition: service_healthy }
      nlp: { condition: service_started }
      vision: { condition: service_started }
      redis: { condition: service_started }
      minio: { condition: service_started }
    env_file: ../../.env
    ports: ["8000:8000"]
    volumes:
      - ../../services/api:/app
    command: bash -lc "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  worker:
    build: ../../workers
    container_name: lf_worker
    depends_on:
      api: { condition: service_started }
      redis: { condition: service_started }
    env_file: ../../.env

volumes:
  lf_db_data:
  lf_minio_data:
